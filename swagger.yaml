openapi: 3.0.0
paths:
  /project:
    get:
      operationId: ProjectController_getProjects
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    post:
      operationId: ProjectController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /project/{id}:
    get:
      operationId: ProjectController_getProject
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    patch:
      operationId: ProjectController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /course:
    get:
      operationId: CourseController_getCourses
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
    post:
      operationId: CourseController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /course/{id}:
    patch:
      operationId: CourseController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCourseDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
  /skill:
    get:
      operationId: SkillController_getSkills
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Skill"
    post:
      operationId: SkillController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSkillDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /skill/{id}:
    patch:
      operationId: SkillController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSkillDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Skill"
  /project-x-skill:
    post:
      operationId: ProjectXSkillController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectXSkillDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /project-reference:
    post:
      operationId: ProjectReferenceController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectReferenceDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: ProjectReferenceController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectReference"
  /project-reference/{id}:
    patch:
      operationId: ProjectReferenceController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectReferenceDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectReference"
info:
  title: Portfolio
  description: The API for Andrew Stormer's portfolio
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  schemas:
    ProjectXSkill:
      type: object
      properties:
        id:
          type: number
        project_id:
          type: number
        skill_id:
          type: number
      required:
        - id
        - project_id
        - skill_id
    ProjectReference:
      type: object
      properties:
        id:
          type: number
        project_id:
          type: number
        text:
          type: string
        link:
          type: string
      required:
        - id
        - project_id
        - text
        - link
    Project:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
        status:
          type: string
        github:
          type: string
        video:
          type: string
        skills:
          type: array
          items:
            $ref: "#/components/schemas/ProjectXSkill"
        references:
          type: array
          items:
            $ref: "#/components/schemas/ProjectReference"
      required:
        - id
        - name
        - description
        - status
    CreateProjectDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - development on-going
            - development completed
            - development discontinued
            - development on-hold
        github:
          type: string
        video:
          type: string
      required:
        - name
        - description
        - status
    UpdateProjectDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - development on-going
            - development completed
            - development discontinued
            - development on-hold
        github:
          type: string
        video:
          type: string
    Course:
      type: object
      properties:
        id:
          type: number
        department:
          type: string
        number:
          type: number
        name:
          type: string
        grade:
          type: string
        link:
          type: string
        priority:
          type: number
      required:
        - id
        - department
        - number
        - name
        - grade
        - priority
    CreateCourseDto:
      type: object
      properties:
        department:
          type: string
          enum:
            - CMP_SC
            - MATH
            - INFOTC
            - STAT
          default: CMP_SC
        number:
          type: number
        name:
          type: string
        grade:
          type: string
          enum:
            - A
            - A-
            - B+
            - B
            - B-
            - C+
            - C
            - C-
            - D+
            - D
            - D-
          default: A
        link:
          type: string
      required:
        - department
        - number
        - name
        - grade
    UpdateCourseDto:
      type: object
      properties:
        department:
          type: string
          enum:
            - CMP_SC
            - MATH
            - INFOTC
            - STAT
          default: CMP_SC
        number:
          type: number
        name:
          type: string
        grade:
          type: string
          enum:
            - A
            - A-
            - B+
            - B
            - B-
            - C+
            - C
            - C-
            - D+
            - D
            - D-
          default: A
        link:
          type: string
    Skill:
      type: object
      properties:
        id:
          type: number
        skill:
          type: string
        confidence:
          type: number
      required:
        - id
        - skill
        - confidence
    CreateSkillDto:
      type: object
      properties:
        skill:
          type: string
        confidence:
          type: number
      required:
        - skill
        - confidence
    UpdateSkillDto:
      type: object
      properties:
        skill:
          type: string
        confidence:
          type: number
    CreateProjectXSkillDto:
      type: object
      properties:
        skill_id:
          type: number
        project_id:
          type: number
      required:
        - skill_id
        - project_id
    CreateProjectReferenceDto:
      type: object
      properties:
        project_id:
          type: number
        text:
          type: string
        link:
          type: string
      required:
        - project_id
        - text
        - link
    UpdateProjectReferenceDto:
      type: object
      properties:
        project_id:
          type: number
        text:
          type: string
        link:
          type: string
        skill_id:
          type: number
